"""Script de desarrollo para cambiar resoluciones m√≥viles.

Permite cambiar f√°cilmente entre diferentes resoluciones m√≥viles
para probar la UI del juego en distintos tama√±os de pantalla.
"""

import sys
from pathlib import Path

# Agregar src al path para importar los m√≥dulos
src_path = Path(__file__).parent.parent.parent / 'src'
sys.path.insert(0, str(src_path))

from config.mobile_config import MobileConfig


def show_current_resolution():
	"""Muestra la resoluci√≥n actual configurada."""
	current = MobileConfig.get_resolution_info()
	print(f"\nüì± Resoluci√≥n actual: {current['key']}")
	print(f"   Tama√±o: {current['width']}x{current['height']}")
	print(f"   Descripci√≥n: {current['description']}")
	print(f"   Es por defecto: {'S√≠' if current['is_default'] else 'No'}")


def show_available_resolutions():
	"""Muestra todas las resoluciones disponibles."""
	resolutions = MobileConfig.list_available_resolutions()
	
	print("\nüìã Resoluciones disponibles:")
	print("=" * 50)
	
	for key, info in resolutions.items():
		marker = "üëë" if info['is_default'] else "  "
		print(f"{marker} {key}: {info['width']}x{info['height']}")
		print(f"      {info['description']}")
		print(f"      Aspecto: {info['aspect_ratio']}")
		print()


def change_resolution(new_resolution: str):
	"""Cambia la resoluci√≥n por defecto.
	
	Args:
		new_resolution: Nueva resoluci√≥n a configurar
	"""
	try:
		# Verificar que la resoluci√≥n es v√°lida
		info = MobileConfig.get_resolution_info(new_resolution)  # type: ignore
		
		# Modificar el archivo de configuraci√≥n
		config_file = src_path / 'config' / 'mobile_config.py'
		
		with open(config_file, 'r', encoding='utf-8') as f:
			content = f.read()
		
		# Reemplazar la l√≠nea DEFAULT_RESOLUTION
		old_line = f"DEFAULT_RESOLUTION: ResolutionKey = '{MobileConfig.DEFAULT_RESOLUTION}'"
		new_line = f"DEFAULT_RESOLUTION: ResolutionKey = '{new_resolution}'"
		
		content = content.replace(old_line, new_line)
		
		with open(config_file, 'w', encoding='utf-8') as f:
			f.write(content)
		
		print(f"\n‚úÖ Resoluci√≥n cambiada a '{new_resolution}'")
		print(f"   Nuevo tama√±o: {info['width']}x{info['height']}")
		print(f"   {info['description']}")
		print("\nüîÑ Reinicia el juego para ver los cambios.")
		
	except ValueError as e:
		print(f"\n‚ùå Error: {e}")
	except Exception as e:
		print(f"\n‚ùå Error inesperado: {e}")


def main():
	"""Funci√≥n principal del script."""
	print("üéÆ SiKIdle - Configurador de Resoluci√≥n M√≥vil")
	print("=" * 45)
	
	if len(sys.argv) == 1:
		# Sin argumentos: mostrar informaci√≥n
		show_current_resolution()
		show_available_resolutions()
		print("üí° Uso: python change_resolution.py <resoluci√≥n>")
		print("   Ejemplo: python change_resolution.py medium")
		
	elif len(sys.argv) == 2:
		# Un argumento: cambiar resoluci√≥n
		new_resolution = sys.argv[1].lower()
		
		if new_resolution in ['list', 'ls', 'show']:
			show_available_resolutions()
		elif new_resolution in ['current', 'now', 'actual']:
			show_current_resolution()
		else:
			change_resolution(new_resolution)
	else:
		print("‚ùå Demasiados argumentos.")
		print("üí° Uso: python change_resolution.py <resoluci√≥n>")


if __name__ == '__main__':
	main()
